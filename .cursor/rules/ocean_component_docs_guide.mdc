---
description:
globs:
alwaysApply: false
---

Rule Name: ocean_component_docs_guide
Description:

# Ocean Web - Component Documentation Guidelines (Nova Estrat√©gia)

Esta documenta√ß√£o estabelece os novos padr√µes para criar documenta√ß√£o de componentes no ocean-web usando uma **estrat√©gia dividida**:

- **Storybook**: Autodocs simples e limpo para desenvolvimento e testes
- **Docusaurus**: Documenta√ß√£o rica e detalhada para usu√°rios finais

## Estrat√©gia Dividida

### üéØ **Filosofia**

- **Storybook = Desenvolvimento**: Playground para testar componentes com controles interativos
- **Docusaurus = Documenta√ß√£o**: Guias completos, exemplos pr√°ticos e refer√™ncias

### ‚úÖ **Vantagens**

- **Sem duplica√ß√£o**: Cada ferramenta faz o que faz de melhor
- **Manuten√ß√£o simples**: Storybook auto-gerado, Docusaurus focado em conte√∫do
- **Melhor experi√™ncia**: Desenvolvedores testam no Storybook, usu√°rios aprendem no Docusaurus
- **Sempre sincronizado**: Docusaurus referencia Storybook via embeds

---

## Parte 1: Storybook (Autodocs Simples)

### 1. Estrutura M√≠nima

```tsx
import type { Meta, StoryObj } from '@storybook/react';
import React from 'react';
import ComponentName from '../ComponentName';

const meta: Meta<typeof ComponentName> = {
  title: 'Components/ComponentName',
  component: ComponentName,
  tags: ['autodocs'],
  argTypes: {
    variant: {
      description: 'A variante visual do componente.',
      control: 'select',
      options: ['primary', 'secondary', 'tertiary'],
    },
    size: {
      description: 'O tamanho do componente.',
      control: 'select',
      options: ['sm', 'md', 'lg'],
    },
    disabled: {
      description: 'Desabilita o componente.',
      control: 'boolean',
    },
    loading: {
      description: 'Exibe um estado de carregamento.',
      control: 'boolean',
    },
    blocked: {
      description: 'Faz o componente ocupar toda a largura dispon√≠vel.',
      control: 'boolean',
    },
  },
};

export default meta;

type Story = StoryObj<typeof ComponentName>;
```

### 2. Story Usage (Principal com Controles)

```tsx
export const Usage: Story = {
  args: {
    children: 'Texto do Componente',
    variant: 'primary',
    size: 'md',
  },
  decorators: [
    (StoryComponent: React.ComponentType): JSX.Element => (
      <div
        style={{
          minWidth: '300px',
          display: 'flex',
          gap: '16px',
          flexWrap: 'wrap',
          alignItems: 'center',
          justifyContent: 'center',
        }}
      >
        <StoryComponent />
      </div>
    ),
  ],
};
```

### 3. Stories Visuais (Sem Controles)

```tsx
export const Variants: Story = {
  parameters: {
    controls: { disable: true },
  },
  render: () => (
    <div style={{ display: 'flex', gap: '16px', flexWrap: 'wrap' }}>
      <ComponentName variant="primary">primary</ComponentName>
      <ComponentName variant="secondary">secondary</ComponentName>
      <ComponentName variant="tertiary">tertiary</ComponentName>
    </div>
  ),
};

export const Size: Story = {
  parameters: {
    controls: { disable: true },
  },
  render: () => (
    <div
      style={{
        display: 'flex',
        gap: '16px',
        flexWrap: 'wrap',
        alignItems: 'center',
      }}
    >
      <ComponentName size="sm">Pequeno</ComponentName>
      <ComponentName size="md">M√©dio</ComponentName>
      <ComponentName size="lg">Grande</ComponentName>
    </div>
  ),
};

export const Blocked: Story = {
  parameters: {
    controls: { disable: true },
  },
  render: () => (
    <div
      style={{
        display: 'flex',
        gap: '16px',
        flexWrap: 'wrap',
        alignItems: 'center',
        minWidth: '300px',
      }}
    >
      <ComponentName blocked>Componente Bloco</ComponentName>
    </div>
  ),
};

export const Disabled: Story = {
  parameters: {
    controls: { disable: true },
  },
  render: () => (
    <div
      style={{
        display: 'flex',
        gap: '16px',
        flexWrap: 'wrap',
        alignItems: 'center',
      }}
    >
      <ComponentName variant="primary" disabled>
        Primary Desabilitado
      </ComponentName>
      <ComponentName variant="secondary" disabled>
        Secondary Desabilitado
      </ComponentName>
      <ComponentName variant="tertiary" disabled>
        Tertiary Desabilitado
      </ComponentName>
    </div>
  ),
};

export const Loading: Story = {
  parameters: {
    controls: { disable: true },
  },
  render: () => (
    <div
      style={{
        display: 'flex',
        gap: '16px',
        flexWrap: 'wrap',
        alignItems: 'center',
      }}
    >
      <ComponentName variant="primary" loading>
        Primary Carregando
      </ComponentName>
      <ComponentName variant="secondary" loading>
        Secondary Carregando
      </ComponentName>
      <ComponentName variant="tertiary" loading>
        Tertiary Carregando
      </ComponentName>
    </div>
  ),
};

export const LoadingSize: Story = {
  parameters: {
    controls: { disable: true },
  },
  render: () => (
    <div
      style={{
        display: 'flex',
        gap: '16px',
        flexWrap: 'wrap',
        alignItems: 'center',
      }}
    >
      <ComponentName size="sm" loading>
        Pequeno
      </ComponentName>
      <ComponentName size="md" loading>
        M√©dio
      </ComponentName>
      <ComponentName size="lg" loading>
        Grande
      </ComponentName>
    </div>
  ),
};
```

### ‚ö†Ô∏è **Princ√≠pios do Storybook**

1. **SEM documenta√ß√£o customizada**: Sem `parameters.docs.page`, sem `Introduction`, sem `CommonPatterns`
2. **SEM import de DocBlock**: Apenas `Meta`, `StoryObj` e `React`
3. **Usage com controles**: Para testar props interativamente
4. **Stories visuais sem controles**: Para demonstra√ß√£o pura
5. **Decorators simples**: Apenas layout b√°sico para Usage
6. **Autodocs autom√°tico**: `tags: ['autodocs']` gera tudo automaticamente

---

## Parte 2: Docusaurus (Documenta√ß√£o Rica)

### 1. Estrutura Padr√£o MDX

````mdx
---
title: ComponentName
sidebar_label: ComponentName
sidebar_position: 2
---

import { ComponentName } from '@useblu/ocean-react';
import StorybookEmbed from '@site/src/components/StorybookEmbed';

# ComponentName

[Descri√ß√£o concisa do prop√≥sito do componente]

## Importa√ß√£o

```tsx
import { ComponentName } from '@useblu/ocean-react';
```
````

### Importa√ß√£o espec√≠fica (recomendado para tree-shaking)

```tsx
import { ComponentName } from '@useblu/ocean-react/ComponentName';
```

### Importa√ß√£o de tipos TypeScript

```tsx
import type { ComponentNameProps } from '@useblu/ocean-react';

// Uso em componente customizado
const MyComponent: React.FC<ComponentNameProps> = (props) => {
  return <ComponentName {...props} />;
};
```

## Playground Interativo

Explore o componente ComponentName no playground interativo do Storybook:

<StorybookEmbed
  storyId="components-componentname--usage"
  height={500}
  title="ComponentName - Playground Interativo"
/>

## Documenta√ß√£o Completa

Para documenta√ß√£o t√©cnica detalhada, exemplos de uso e API completa, consulte o **[Storybook do ComponentName](https://ocean-ds.github.io/ocean-web/?path=/docs/components-componentname--docs)**.

No Storybook voc√™ encontrar√°:

- ‚úÖ **Controles interativos** para testar todas as props
- ‚úÖ **API gerada automaticamente** com tipagem completa
- ‚úÖ **Exemplos visuais** de todas as variantes e estados
- ‚úÖ **Playground** para experimenta√ß√£o r√°pida

## Links relacionados

- [ComponenteSimilar](/components/componente-similar) - Para casos similares
- [OutroComponente](/components/outro-componente) - Para funcionalidade relacionada
- [Storybook - ComponentName](https://ocean-ds.github.io/ocean-web/?path=/docs/components-componentname--docs) - Documenta√ß√£o t√©cnica

````

### 2. Documenta√ß√£o Detalhada (Opcional)

Para componentes complexos que precisam de mais orienta√ß√£o:

```mdx
## Uso b√°sico

```tsx live
<ComponentName variant="primary">Conte√∫do b√°sico</ComponentName>
````

## Variantes

O ComponentName tem diferentes variantes para diferentes contextos de uso:

### Primary

```tsx live
<ComponentName variant="primary">Variante prim√°ria</ComponentName>
```

### Secondary

```tsx live
<ComponentName variant="secondary">Variante secund√°ria</ComponentName>
```

### Guia de uso das variantes

- **primary**: Para a√ß√µes principais e call-to-actions (m√°ximo 1 por tela)
- **secondary**: Para a√ß√µes secund√°rias e alternativas
- **tertiary**: Para a√ß√µes terci√°rias discretas

## Tamanhos

### Small

```tsx live
<ComponentName size="sm" variant="primary">
  Pequeno
</ComponentName>
```

### Medium (padr√£o)

```tsx live
<ComponentName size="md" variant="primary">
  M√©dio
</ComponentName>
```

### Large

```tsx live
<ComponentName size="lg" variant="primary">
  Grande
</ComponentName>
```

## Estados

### Disabled

```tsx live
<ComponentName variant="primary" disabled>
  Componente desabilitado
</ComponentName>
```

### Loading

```tsx live
<ComponentName variant="primary" loading>
  Carregando...
</ComponentName>
```

## API

### Props

| Prop        | Tipo                                     | Padr√£o      | Descri√ß√£o                              |
| ----------- | ---------------------------------------- | ----------- | -------------------------------------- |
| `variant`   | `'primary' \| 'secondary' \| 'tertiary'` | `'primary'` | Define o estilo visual do componente   |
| `size`      | `'sm' \| 'md' \| 'lg'`                   | `'md'`      | Define o tamanho do componente         |
| `disabled`  | `boolean`                                | `false`     | Desabilita o componente                |
| `loading`   | `boolean`                                | `false`     | Mostra estado de carregamento          |
| `blocked`   | `boolean`                                | `false`     | Faz o componente ocupar largura total  |
| `onClick`   | `(event: MouseEvent) => void`            | -           | Fun√ß√£o chamada ao clicar no componente |
| `className` | `string`                                 | -           | Classes CSS adicionais                 |
| `children`  | `ReactNode`                              | -           | Conte√∫do do componente                 |

### Eventos

- `onClick`: Disparado quando o componente √© clicado
- `onFocus`: Disparado quando o componente recebe foco
- `onBlur`: Disparado quando o componente perde foco

## Acessibilidade

- ‚úÖ Suporte completo a navega√ß√£o por teclado
- ‚úÖ Estados de foco vis√≠veis
- ‚úÖ Atributos ARIA apropriados
- ‚úÖ Suporte a screen readers
- ‚úÖ Contraste adequado em todos os estados

### Navega√ß√£o por teclado

| Tecla             | Fun√ß√£o                        |
| ----------------- | ----------------------------- |
| `Tab`             | Move o foco para o componente |
| `Space` / `Enter` | Ativa o componente            |

## Melhores pr√°ticas

### ‚úÖ Fa√ßa

- Use variante `primary` para a√ß√µes principais da p√°gina
- Use texto claro e conciso que descreva a a√ß√£o
- Use estado `loading` durante opera√ß√µes ass√≠ncronas
- Combine `disabled` com valida√ß√£o para melhor UX

### ‚ùå N√£o fa√ßa

- N√£o use m√∫ltiplos componentes `primary` na mesma tela
- N√£o use texto muito longo em componentes
- N√£o omita o estado `disabled` quando apropriado
- N√£o ignore estados de carregamento em opera√ß√µes demoradas

## Vis√£o geral das variantes

Veja todas as variantes do ComponentName em a√ß√£o:

<StorybookEmbed
  storyId="components-componentname--variants"
  height={350}
  showToolbar={false}
  title="ComponentName - Todas as Variantes"
/>

````

### 3. StorybookEmbed - Configura√ß√µes

```mdx
// Playground completo com controles
<StorybookEmbed
  storyId="components-componentname--usage"
  height={500}
  title="ComponentName - Playground Interativo"
/>

// Canvas limpo para demonstra√ß√£o
<StorybookEmbed
  storyId="components-componentname--variants"
  height={350}
  showToolbar={false}
  title="ComponentName - Todas as Variantes"
/>

// Exemplo espec√≠fico
<StorybookEmbed
  storyId="components-componentname--size"
  height={250}
  showToolbar={false}
  title="ComponentName - Tamanhos"
/>
````

### 4. Componente StorybookEmbed

O componente j√° existe em `packages/ocean-docs/src/components/StorybookEmbed.tsx`:

```tsx
import StorybookEmbed from '@site/src/components/StorybookEmbed';

// Props dispon√≠veis:
// - storyId: string (obrigat√≥rio)
// - height: number (padr√£o: 400)
// - showToolbar: boolean (padr√£o: true)
// - viewMode: 'story' | 'docs' (padr√£o: 'story')
// - title: string (para acessibilidade)
```

---

## Estrutura de Arquivos

```
packages/ocean-react/src/ComponentName/
‚îú‚îÄ‚îÄ ComponentName.tsx           # Componente principal
‚îú‚îÄ‚îÄ index.ts                   # Export
‚îî‚îÄ‚îÄ stories/
    ‚îî‚îÄ‚îÄ ComponentName.stories.tsx  # Stories simples com autodocs

packages/ocean-docs/docs/components/
‚îî‚îÄ‚îÄ componentname.mdx          # Documenta√ß√£o rica
```

---

## Checklist de Implementa√ß√£o

### ‚úÖ **Storybook (Stories)**

- [ ] Meta configurado com `tags: ['autodocs']`
- [ ] ArgTypes com descri√ß√µes em portugu√™s
- [ ] Story `Usage` com decorators e controles ativos
- [ ] Stories visuais com `parameters: { controls: { disable: true } }`
- [ ] SEM imports do `@storybook/blocks`
- [ ] SEM `parameters.docs.page` customizado
- [ ] SEM componentes de documenta√ß√£o (Introduction, etc.)

### ‚úÖ **Docusaurus (MDX)**

- [ ] Frontmatter completo (title, sidebar_label, sidebar_position)
- [ ] Import do componente Ocean
- [ ] Import do StorybookEmbed
- [ ] Se√ß√£o de importa√ß√£o (b√°sica, espec√≠fica, tipos)
- [ ] Playground interativo com StorybookEmbed
- [ ] Link para documenta√ß√£o completa no Storybook
- [ ] Links relacionados
- [ ] Se√ß√µes detalhadas se necess√°rio (variantes, API, etc.)

### ‚úÖ **Integra√ß√£o**

- [ ] Story IDs corretos nos embeds
- [ ] URLs do Storybook v√°lidas
- [ ] Navega√ß√£o fluida entre Docusaurus e Storybook
- [ ] Configura√ß√£o do StorybookEmbed adequada (height, toolbar)

---

## Padr√µes de Story ID

```
// Formato padr√£o
storyId="components-componentname--usage"
storyId="components-componentname--variants"
storyId="components-componentname--size"
storyId="components-componentname--blocked"
storyId="components-componentname--disabled"
storyId="components-componentname--loading"

// Exemplos espec√≠ficos
storyId="components-button--usage"
storyId="components-button--variants"
storyId="components-input--usage"
storyId="components-modal--usage"
```

---

## Benef√≠cios da Nova Estrat√©gia

### üöÄ **Performance**

- Storybook mais r√°pido (sem documenta√ß√£o pesada)
- Docusaurus focado (sem duplica√ß√£o)
- Carregamento otimizado

### üßë‚Äçüíª **Experi√™ncia do Desenvolvedor**

- **Storybook**: Teste r√°pido de props
- **Docusaurus**: Aprendizado estruturado
- Navega√ß√£o fluida entre ferramentas

### üîß **Manuten√ß√£o**

- Autodocs reduz manuten√ß√£o manual
- Uma fonte de verdade para cada tipo de conte√∫do
- Sincroniza√ß√£o autom√°tica

### üë• **Experi√™ncia do Usu√°rio**

- **Desenvolvedores**: Playground eficiente
- **Designers**: Refer√™ncia visual r√°pida
- **Usu√°rios**: Documenta√ß√£o rica e exemplos

---

**Vers√£o:** 4.0  
**√öltima atualiza√ß√£o:** Janeiro 2025  
**Baseado em:** Button.stories.tsx (autodocs) + button.mdx (StorybookEmbed)  
**Estrat√©gia:** Dividida (Storybook simples + Docusaurus rico)  
**Respons√°vel:** Equipe Ocean Web

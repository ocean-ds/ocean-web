name: Deploy Ocean Documentation

on:
  push:
    branches:
      - master
      - main
    paths:
      - 'packages/ocean-docs/**'
      - 'packages/ocean-react/**'
      - 'packages/ocean-core/**'
      - '.github/workflows/deploy-docs.yml'
      - 'package.json'
  pull_request:
    branches:
      - master
      - main
    paths:
      - 'packages/ocean-docs/**'
      - 'packages/ocean-react/**'

concurrency:
  group: deploy-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  build-and-deploy:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # Build todos os pacotes
      - name: Build all packages
        run: |
          yarn build:libs
          yarn build:storybook
          yarn build:docs

      # Prepara o diretório de deploy
      - name: Prepare deployment directory
        run: |
          # Cria diretório temporário para o deploy
          mkdir -p ./deploy-temp
          # Move o Storybook para a raiz
          cp -r storybook-static/* ./deploy-temp/
          # Move o Docusaurus para /docs
          mkdir -p ./deploy-temp/docs
          cp -r packages/ocean-docs/build/* ./deploy-temp/docs/

      # Deploy único para GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./deploy-temp
          force_orphan: true

  test-build:
    name: Test Build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build all packages
        run: |
          yarn build:libs
          yarn build:storybook
          yarn build:docs

      - name: Test serve documentation
        run: |
          cd packages/ocean-docs
          yarn serve &
          sleep 10
          curl -f http://localhost:3000/ || exit 1

      - name: Test serve Storybook
        run: |
          yarn serve:storybook &
          sleep 10
          curl -f http://localhost:6006/ || exit 1
